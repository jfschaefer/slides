abstract Semantics = Grammar, Logic ** {
  fun
    t_S : S -> Prop;
    t_NP : NP -> Term;
    t_VP : VP -> (Term -> Prop);
  def
    t_NP ahmed = a;
    t_S (and_S s1 s2) = and (t_S s1) (t_S s2);
    t_VP (and_VP v1 v2) =
        \x -> and (t_VP v1 x) (t_VP v2 x);
